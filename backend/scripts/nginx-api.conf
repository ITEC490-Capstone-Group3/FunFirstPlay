# Main server configuration for both frontend and API
# This is the domain-based configuration file that works with both HTTP and HTTPS
# Note: Certbot will modify this file to add SSL configuration

# HTTP server block that will be modified by Certbot
server {
    listen 80;
    server_name funfirstplay.tech www.funfirstplay.tech;
    
    # Logs
    access_log /var/log/nginx/funfirstplay.tech-access.log;
    error_log /var/log/nginx/funfirstplay.tech-error.log;

    # Serve frontend static files
    root /opt/funfirstplay/frontend;
    index index.html;
    
    # Serve static files with proper caching
    location ~* \.(html|htm)$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires max;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Forward API requests to the backend
    location /api/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 240s;
        
        # Large request body sizes for file uploads
        client_max_body_size 10M;
    }
    
    # Don't log health checks to reduce log noise
    location /api/health {
        proxy_pass http://localhost:5000/api/health;
        access_log off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Handle SPA routing - all non-file routes go to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}

# SSL configuration that will be added by certbot automatically
# Uncomment this section if you want to manually configure SSL (not recommended)
# server {
#     listen 443 ssl http2;
#     server_name funfirstplay.tech www.funfirstplay.tech;
#
#     # SSL configuration - will be managed by Certbot
#     ssl_certificate /etc/letsencrypt/live/funfirstplay.tech/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/funfirstplay.tech/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_tickets off;
#
#     # OCSP Stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 8.8.8.8 8.8.4.4 valid=300s;
#     resolver_timeout 5s;
#
#     # Security headers
#     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     add_header Content-Security-Policy "default-src 'self'; connect-src 'self' https://funfirstplay.tech/api; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; script-src 'self' 'unsafe-inline' https://code.jquery.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; frame-ancestors 'self';" always;
#
#     # Logs
#     access_log /var/log/nginx/funfirstplay.tech-access.log;
#     error_log /var/log/nginx/funfirstplay.tech-error.log;
#
#     # Serve frontend static files
#     root /opt/funfirstplay/frontend;
#     index index.html;
#
#     # Serve static files with proper caching
#     location ~* \.(html|htm)$ {
#         expires 1h;
#         add_header Cache-Control "public, must-revalidate";
#     }
#
#     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#         expires max;
#         add_header Cache-Control "public, max-age=31536000, immutable";
#     }
#
#     # Forward API requests to the backend
#     location /api/ {
#         proxy_pass http://localhost:5000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#         proxy_read_timeout 240s;
#         
#         # Large request body sizes for file uploads
#         client_max_body_size 10M;
#     }
#
#     # Don't log health checks to reduce log noise
#     location /api/health {
#         proxy_pass http://localhost:5000/api/health;
#         access_log off;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#
#     # Handle SPA routing - all non-file routes go to index.html
#     location / {
#         try_files $uri $uri/ /index.html;
#     }
#
#     # Error pages
#     error_page 404 /404.html;
#     error_page 500 502 503 504 /50x.html;
# }